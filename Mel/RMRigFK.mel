source "RMRigFunctions.mel";
source "RMRigShapeControls.mel";
source "RMRigTools.mel";
source "NameConvention.mel";

global proc RMFKCreateonSelected()
{
    string $temp []=`ls -sl`;
    string $BonesS[]=`RMCreateBonesAtPoints $temp`;
    RMCreateFKControls $BonesS[0] (`size $BonesS`-1);
}

global proc string[] RMCreateFKControls (string $FKroot,int $depth)
{
    string $Ex=$FKroot;
    string $Childs[];
    int $Index=0;
    float $Tam;
    string $CntrlExt[];
    string $GrupoCntrl[];
    $Childs=`listRelatives -c $Ex`;
    $Tam=`size $Childs`;
    
    while (($Tam!=0)&&($Index!=$depth))
    {
        //if (`objectType -isType "transform" $Ex`!=0)
       	//{
            $Tam=`lenght_of_bone $Ex`;
            $CntrlExt[$Index] = `RMCreaControl $Ex ($Tam*1/2)`;
            $GrupoCntrl[$Index]= `RMCreateGrouponObj $CntrlExt[$Index] 1`;
            pointConstraint $Ex $GrupoCntrl[$Index];
            connectAttr ($CntrlExt[$Index] +".rotate") ($Ex+".rotate");
            RMconnectScale $CntrlExt[$Index] $Ex;
            if ($Index>0) 
            {
               parent $GrupoCntrl[$Index] $CntrlExt[$Index-1];
            }
            $Index=$Index+1;
        //}
        $Ex=$Childs[0];
        $Childs=`listRelatives -c $Ex`;
        print $Childs;
        $Tam=`size $Childs`;
    }
    return $GrupoCntrl;
}

